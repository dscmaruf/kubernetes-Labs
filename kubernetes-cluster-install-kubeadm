#### Disable swap 
$  sudo -i
$  swapoff -a
$  exit
$  strace -eopenat kubectl version

##Install Docker on all worker and master nodes

#Follow instruction : https://docs.docker.com/engine/install/debian/
--Debian Steps--
$ sudo apt-get update
$ sudo apt install docker.io -y
$ sudo systemctl start docker


######

cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

########## Install Kubeadm on all worker and master nodes
#Follow instruction : https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
$ cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
  net.bridge.bridge-nf-call-ip6tables = 1
  net.bridge.bridge-nf-call-iptables = 1
EOF
$ sudo sysctl --system
$ sudo apt-get update && sudo apt-get install -y apt-transport-https curl
$ curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
$ cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
  deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
  
$ sudo apt-get update
$ sudo apt-get install -y kubelet kubeadm kubectl
$ sudo apt-mark hold kubelet kubeadm kubectl
$ sudo systemctl daemon-reload
$ sudo systemctl start docker
$ sudo systemctl enable docker
$ sudo systemctl start kubelet
$ sudo systemctl enable kubelet


###Initialize cluster using kubeadm 
#Follow: 

$ kubeadm init
OR
$ kubeadm init --apiserver-advertise-address=192.168.56.11 --pod-network-cidr=10.244.0.0/16


####If kubeadm init get success and then failed to connect 6443 :

#### Disable swap 
$  sudo -i
$  swapoff -a
$  exit
$  strace -eopenat kubectl version

##Deploy Pod Network Flannel
kubectl create -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

